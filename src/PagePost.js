// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Api from "./common/Api.js";
import * as Post from "./components/Post.js";
import * as React from "react";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.js";
import * as Js_option from "bs-platform/lib/es6/js_option.js";
import * as Belt_Result from "bs-platform/lib/es6/belt_Result.js";

function $$default(props) {
  return React.createElement(Post.make, {
              data: props.post,
              comments: props.comments
            });
}

function getServerSideProps(ctx) {
  var params = ctx.params;
  return $$Promise.$$catch(Promise.all([
                        Api.getPost(params.board, params.slug),
                        Api.getComment(params.board, params.slug)
                      ]).then(function (param) {
                      return Promise.all([
                                  param[0].json(),
                                  param[1].json()
                                ]);
                    }).then(function (param) {
                    return Promise.resolve({
                                TAG: 0,
                                _0: [
                                  ((json) => json)(param[0]),
                                  ((json) => json["list"])(param[1])
                                ],
                                [Symbol.for("name")]: "Ok"
                              });
                  }), (function (e) {
                  return {
                          TAG: 1,
                          _0: e.RE_EXN_ID === $$Promise.JsError ? Js_option.getWithDefault("", e._1.message) : "Unexpected error occurred",
                          [Symbol.for("name")]: "Error"
                        };
                })).then(function (result) {
              var emptyPost = {
                bid: "",
                aid: "",
                owner: "",
                title: "",
                class: "",
                brdname: ""
              };
              return Promise.resolve({
                          props: {
                            post: Belt_Result.getWithDefault(result, [
                                    emptyPost,
                                    []
                                  ])[0],
                            comments: Belt_Result.getWithDefault(result, [
                                    emptyPost,
                                    []
                                  ])[1]
                          }
                        });
            });
}

export {
  $$default ,
  $$default as default,
  getServerSideProps ,
  
}
/* Post Not a pure module */
