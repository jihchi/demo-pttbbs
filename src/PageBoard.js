// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Api from "./common/Api.js";
import * as Board from "./components/Board.js";
import * as React from "react";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.js";
import * as Js_option from "bs-platform/lib/es6/js_option.js";
import * as Router from "next/router";

function $$default(props) {
  var router = Router.useRouter();
  return React.createElement(Board.make, {
              isFallback: router.isFallback,
              posts: props.posts
            });
}

function getStaticProps(ctx) {
  return $$Promise.$$catch(Api.getPosts(ctx.params.board, undefined, undefined, undefined).then(function (res) {
                      return res.json();
                    }).then(function (json) {
                    return Promise.resolve({
                                TAG: 0,
                                _0: ((json) => json.list)(json),
                                [Symbol.for("name")]: "Ok"
                              });
                  }), (function (e) {
                  return Promise.resolve({
                              TAG: 1,
                              _0: e.RE_EXN_ID === $$Promise.JsError ? Js_option.getWithDefault("", e._1.message) : "Unexpected error occurred",
                              [Symbol.for("name")]: "Error"
                            });
                })).then(function (results) {
              return Promise.resolve({
                          props: {
                            posts: results
                          }
                        });
            });
}

function getStaticPaths(_params) {
  return Promise.resolve({
              paths: [],
              fallback: true
            });
}

export {
  $$default ,
  $$default as default,
  getStaticPaths ,
  getStaticProps ,
  
}
/* Board Not a pure module */
